// Routes for {{ name }}
const express = require('express');
const router = express.Router();
const db = require('./db');  // Import the shared database connection

// Create table for {{ name }}
db.serialize(() => {
    db.run("CREATE TABLE IF NOT EXISTS {{ name }} (id INTEGER PRIMARY KEY, data TEXT)");
});

router.post('/{{ name }}', (req, res) => {
    const { data } = req.body;
    db.run("INSERT INTO {{ name }} (data) VALUES (?)", [data], function(err) {
        if (err) {
            return res.status(500).send(err.message);
        }
        res.status(201).send({ id: this.lastID });
    });
});

router.get('/{{ name }}/:id', (req, res) => {
    const { id } = req.params;
    db.get("SELECT * FROM {{ name }} WHERE id = ?", [id], (err, row) => {
        if (err) {
            return res.status(500).send(err.message);
        }
        if (!row) {
            return res.status(404).send('Not found');
        }
        res.send(row);
    });
});

router.put('/{{ name }}/:id', (req, res) => {
    const { id } = req.params;
    const { data } = req.body;
    db.run("UPDATE {{ name }} SET data = ? WHERE id = ?", [data, id], function(err) {
        if (err) {
            return res.status(500).send(err.message);
        }
        if (this.changes === 0) {
            return res.status(404).send('Not found');
        }
        res.send('Updated successfully');
    });
});

router.delete('/{{ name }}/:id', (req, res) => {
    const { id } = req.params;
    db.run("DELETE FROM {{ name }} WHERE id = ?", [id], function(err) {
        if (err) {
            return res.status(500).send(err.message);
        }
        if (this.changes === 0) {
            return res.status(404).send('Not found');
        }
        res.send('Deleted successfully');
    });
});

router.get('/{{ name }}', (req, res) => {
    const { page = 1, limit = 10 } = req.query;
    const offset = (page - 1) * limit;
    db.all("SELECT * FROM {{ name }} LIMIT ? OFFSET ?", [limit, offset], (err, rows) => {
        if (err) {
            return res.status(500).send(err.message);
        }
        res.send(rows);
    });
});

module.exports = router;
